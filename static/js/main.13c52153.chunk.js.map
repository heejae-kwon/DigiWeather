{"version":3,"sources":["logo/Node.js_logo.svg","logo/React_logo.svg","logo/TypeScript_logo.svg","logo/DigiPen_logo.png","components/SearchForm.tsx","components/WeatherForm.tsx","util/DateHelper.tsx","util/TempConvertHelper.tsx","util/CapitalizeWords.tsx","components/WeatherInfo.tsx","App.tsx","index.tsx"],"names":["module","exports","SearchMethod","Unit","SearchForm","props","useState","input","setInput","ZIPCODE","method","setMethod","placeholder","setPlaceholder","className","defaultValue","onKeyDown","e","key","preventDefault","getWeather","onInput","currentTarget","value","type","toString","aria-label","onChange","target","parseInt","Geographic","navigator","geolocation","getCurrentPosition","position","latitude","parseFloat","coords","toFixed","longitude","id","dayToString","dayNum","res","hourTo12HourPeriodString","hour","letter","WeatherForm","defaultBgList","Array","fill","index","setIndex","bgList","setBgList","FAHRENHEIT","unit","setUnit","unitConversion","kelvin","kelvinToFahrenheit","kelvinToCelsius","celsiusItalic","fahrenheitItalic","imgSrc","weathers","icon","time","Date","dt","handleMouseLeave","copy","from","renderForecast","map","fc","fcIndex","fcTime","fcImgSrc","fcDay","getDay","onClick","onMouseEnter","i","handleMouseOver","onMouseLeave","getHours","alt","src","temp","temp_min","name","description","replace","txt","charAt","toUpperCase","substr","toLowerCase","width","height","CELSIUS","humidity","wind_speed","WeatherInfo","main","temp_max","App","Object","weather","setWeather","forecast","setForecast","isWeatherActive","setIsWeatherActive","content","searchMethod","a","response","axios","get","match","exec","console","log","buildUrlGeo","data","error","keys","length","color","listOfForecast","fcList","list","newWeather","element","wind","speed","push","showWeather","React_logo","Nodejs_logo","TypeScript_logo","DigiPen_logo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13c52153.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Node.js_logo.89ccb090.svg\";","module.exports = __webpack_public_path__ + \"static/media/React_logo.05a3e30f.svg\";","module.exports = __webpack_public_path__ + \"static/media/TypeScript_logo.7595fea1.svg\";","module.exports = __webpack_public_path__ + \"static/media/DigiPen_logo.5764106a.png\";","import React from 'react';\nimport { useState } from 'react';\n\ninterface SearchFormProps {\n  getWeather: (input: string, method: SearchMethod) => Promise<void>;\n}\nexport enum SearchMethod {\n  ZIPCODE, Geographic\n}\nexport const SearchForm = (props: SearchFormProps) => {\n  const [input, setInput] = useState('');\n  const [method, setMethod] = useState(SearchMethod.ZIPCODE);\n  const [placeholder, setPlaceholder] = useState(\"Enter the ZIP code\");\n  const enterKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (input === '') {\n      return;\n    }\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      props.getWeather(input, method);\n    }\n  }\n  const searchMethodChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const target: SearchMethod = parseInt(e.currentTarget.value);\n    setInput(\"\");\n    switch (target) {\n      case SearchMethod.ZIPCODE: {\n        setMethod(SearchMethod.ZIPCODE);\n        setPlaceholder(\"Enter the ZIP code\");\n        break;\n      }\n      case SearchMethod.Geographic: {\n        setMethod(SearchMethod.Geographic);\n        setPlaceholder(\"Latitude, Longitude\");\n\n        if (!navigator.geolocation) {\n          setInput('Geolocation is not supported by your browser');\n        } else {\n          //       status.textContent = 'Locatingâ€¦';\n          const success = (position: any) => {\n            const latitude: string = parseFloat(position.coords.latitude).toFixed(2).toString();\n            const longitude: string = parseFloat(position.coords.longitude).toFixed(2).toString();\n            setInput(latitude + \", \" + longitude);\n          };\n          const error = () => { setInput(\"Unable to retrieve your location\") }\n          navigator.geolocation.getCurrentPosition(success, error);\n        }\n        break;\n      }\n      default: {\n\n      }\n    }\n  }\n  return (\n    <div className=\"bg-white my-2 rounded\">\n      <form className=\"w-full max-w-sm\">\n        <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\n          <input className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"\n           defaultValue={input} onKeyDown={enterKeyDown} onInput={(e: React.FormEvent<HTMLInputElement>) => setInput(e.currentTarget.value)} type=\"text\" placeholder={placeholder.toString()} aria-label=\"Full name\" />\n          <select className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 mx-2 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            onChange={searchMethodChange} id=\"grid-state\" defaultValue={method.toString()}>\n            <option value={SearchMethod.ZIPCODE}>ZIP code</option>\n            <option value={SearchMethod.Geographic}>Geographic Coordinates</option>\n          </select>\n        </div>\n      </form>\n    </div>);\n}\n","\nimport React, { useState } from 'react';\nimport { WeatherInfo } from './WeatherInfo';\nimport { dayToString, hourTo12HourPeriodString } from '../util/DateHelper'\nimport { capitalizeWords } from '../util/CapitalizeWords'\nimport { kelvinToCelsius, kelvinToFahrenheit } from '../util/TempConvertHelper'\n\ninterface WeatherFormProps {\n  weathers: Array<WeatherInfo>\n}\nenum Unit {\n  CELSIUS,\n  FAHRENHEIT\n}\n\nconst WeatherForm = (props: WeatherFormProps) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const defaultBgList = Array<string>(8).fill(\"bg-transparent\");\n  const [index, setIndex] = useState(0);\n  const [bgList, setBgList] = useState(defaultBgList);\n  const [unit, setUnit] = useState(Unit.FAHRENHEIT);\n  const unitConversion = (kelvin: number) => {\n    if (unit === Unit.FAHRENHEIT) {\n      return kelvinToFahrenheit(kelvin);\n    }\n    return kelvinToCelsius(kelvin);\n  };\n  let celsiusItalic: string = \"underline\";\n  let fahrenheitItalic = \"\";\n  if (unit === Unit.FAHRENHEIT) {\n    celsiusItalic = \"\";\n    fahrenheitItalic = \"underline\";\n  }\n  const imgSrc: string = \"http://openweathermap.org/img/wn/\" + props.weathers[index].icon + \"@2x.png\";\n  const time = new Date(parseInt(props.weathers[index].dt) * 1000);\n  const handleMouseOver = (i: number) => { const copy = Array.from(defaultBgList); copy[i] = \"bg-gray-200\"; setBgList(copy) };\n  const handleMouseLeave = () => { const copy = Array.from(defaultBgList); setBgList(copy); };\n\n  bgList[index] = \"bg-gray-200\";\n\n  const renderForecast = props.weathers.map((fc, fcIndex) => {\n    const fcTime = new Date(parseInt(fc.dt) * 1000);\n    const fcImgSrc: string = \"http://openweathermap.org/img/wn/\" + fc.icon + \"@2x.png\";\n    const fcDay = dayToString(fcTime.getDay());\n    return (\n      <td onClick={() => { setIndex(fcIndex); handleMouseLeave() }} onMouseEnter={() => { handleMouseOver(fcIndex) }} onMouseLeave={() => { handleMouseLeave() }} key={fcIndex} className={bgList[fcIndex].toString() + \" cursor-pointer border font-bold justify-center py-2\"}>\n        <p className=\"text-center\">\n          {fcDay[0] + fcDay[1] + fcDay[2] + \" \" + hourTo12HourPeriodString(fcTime.getHours())}\n        </p>\n        <img alt=\"weather img\" src={fcImgSrc} />\n        <p className=\"text-center text-xl\">\n          {unitConversion(parseFloat(fc.temp)).toString() + \"Â°\"}\n        </p>\n        <p className=\"text-center\">\n          {unitConversion(parseFloat(fc.temp_min)).toString() + \"Â°\"}\n        </p>\n      </td>\n    );\n  });\n\n  return (<div className=\"flex my-2 bg-white rounded shadow-lg\">\n    <div className=\"flex flex-col px-6 py-4\">\n      <div className=\"flex flex-col font-bold mb-2\">\n        <div className=\"text-2xl\">\n          {props.weathers[0].name}\n        </div>\n        <div className=\"mr-2\">\n          {dayToString(time.getDay())}\n          {\" \"}\n          {hourTo12HourPeriodString(time.getHours())}\n          {\" â€¢ \"}\n          {capitalizeWords(props.weathers[index].description)}\n        </div>\n      </div>\n      <div className=\"flex flex-row justify-around\">\n        <div className=\"flex flex-row justify-around\">\n          <img alt=\"weather img\" src={imgSrc} width=\"200\" height=\"200\" />\n        </div>\n        <div className=\"font-bold\">\n          <div className=\"flex flex-row\">\n            <p className='text-gray-800 font-bold text-6xl'>\n              {unitConversion(parseFloat(props.weathers[index].temp)).toString() + \"Â°\"}\n            </p>\n            <div className=\"flex flex-row\">\n              <p onClick={() => { setUnit(Unit.FAHRENHEIT) }} className={\"text-gray-800 text-2xl ml-2 mt-5 font-extrabold cursor-pointer \" + fahrenheitItalic.toString()}>\n                F\n            </p>\n              <p className=\"text-gray-800 text-2xl ml-2 mt-5 font-extrabold\">\n                /\n            </p>\n              <p onClick={() => { setUnit(Unit.CELSIUS) }} className={\"text-gray-800 text-2xl ml-2 mt-5 font-extrabold cursor-pointer \" + celsiusItalic.toString()}>\n                C\n            </p>\n            </div>\n          </div>\n          <p className=\"text-gray-700 text-base\">\n            {\"Humidity: \" + props.weathers[index].humidity + \"%\"}\n          </p>\n          <p className=\"text-gray-700 text-base\">\n            {\"Wind: \" + props.weathers[index].wind_speed}\n          </p>\n        </div>\n      </div>\n      <div>\n        <table className=\"table-auto\">\n          <tbody>\n            <tr>\n              {renderForecast}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>);\n}\nexport default WeatherForm;","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-lone-blocks */\n\nimport React from 'react';\n\nexport function dayToString(dayNum: number) {\n  let res: string = \"\";\n  switch (dayNum) {\n    case 0: {\n      res = \"Sunday\";\n    } break;\n    case 1: {\n      res = \"Monday\";\n    } break;\n    case 2: {\n      res = \"Tuesday\";\n    } break;\n    case 3: {\n      res = \"Wednesday\";\n    } break;\n    case 4: {\n      res = \"Thursday\";\n    } break;\n    case 5: {\n      res = \"Friday\";\n    } break;\n    case 6: {\n      res = \"Saturday\";\n    } break;\n    default: {\n    } break;\n  }\n\n  return res;\n}\n\nexport function hourTo12HourPeriodString(hour: number) {\n  const letter = (hour < 12 || hour === 24) ? \"AM\" : \"PM\";\n  const number = hour % 12 || 12;;\n\n  return number.toString() + \" \" + letter;\n}\n\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\n\nexport function kelvinToFahrenheit(kelvin: number) {\n\n  return ((1.8) * (kelvin - 273.15) + 32).toFixed(0);\n}\n\nexport function kelvinToCelsius(kelvin: number) {\n\n  return (kelvin - 273.15).toFixed(0);\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\n\nexport function capitalizeWords(str: string) {\n  return str.replace(/\\w\\S*/g, (txt: string) => { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\n\n\nexport class WeatherInfo  {\n  main: string = \"\";\n  description: string = \"\";\n  temp: string = \"\";\n  temp_max: string = \"\";\n  temp_min: string = \"\";\n  humidity: string = \"\";\n  wind_speed: string = \"\";\n  dt: string = \"\";\n  name: string = \"\";\n  icon: string = \"\";\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { SearchForm, SearchMethod } from './components/SearchForm';\nimport WeatherForm from './components/WeatherForm';\nimport { WeatherInfo } from './components/WeatherInfo';\nimport ReactLoading from 'react-loading';\n\nimport Nodejs_logo from './logo/Node.js_logo.svg'\nimport React_logo from './logo/React_logo.svg'\nimport TypeScript_logo from './logo/TypeScript_logo.svg'\nimport DigiPen_logo from './logo/DigiPen_logo.png'\n\nconst App = () => {\n\n  const devUrl = \"http://localhost:5000/api/weather/zipcode/\";\n  const buildUrl = \"https://ts-weather-server.herokuapp.com/api/weather/zipcode/\";\n  const buildUrlGeo = \"https://ts-weather-server.herokuapp.com/api/weather/geographic_coordinates?\";\n  const devUrlGeo = \"http://localhost:5000/api/weather/geographic_coordinates?\";\n  const [weather, setWeather] = useState(Object);\n  const [forecast, setForecast] = useState(Object);\n  const [isWeatherActive, setIsWeatherActive] = useState(false);\n  const getWeather = async (content: string, searchMethod: SearchMethod) => {\n    if (isWeatherActive === false) {\n      setIsWeatherActive(true);\n    }\n    try {\n      let response: any = null;\n      switch (searchMethod) {\n        case SearchMethod.ZIPCODE: {\n          response = await axios.get(buildUrl + content);\n          break;\n        }\n        case SearchMethod.Geographic: {\n          const reg: RegExp = /(^[-+]?(?:[1-8]?\\d(?:\\.\\d+)?|90(?:\\.0+)?)),\\s*([-+]?(?:180(?:\\.0+)?|(?:(?:1[0-7]\\d)|(?:[1-9]?\\d))(?:\\.\\d+)?))$/;\n          const match = reg.exec(content);\n          console.log(match);\n          if (match) {\n            response = await axios.get(buildUrlGeo + \"lat=\" + match[1] + \"&lon=\" + match[2]);\n          }\n          break;\n        }\n      }\n      setWeather(response.data.weather);\n      setForecast(response.data.forecast);\n    } catch (error) {\n      console.error(error);\n    }\n\n  };\n  const showWeather = () => {\n    if (isWeatherActive === false)\n      return;\n    if (!weather ||\n      !forecast ||\n      Object.keys(weather).length === 0 ||\n      Object.keys(forecast).length === 0) {\n\n      return (\n        <div className=\"mt-8\">\n          <ReactLoading type={\"spin\"} color={\"#ffffff\"} height={200} width={200} />\n        </div>\n      );\n    }\n\n    const listOfForecast: Array<WeatherInfo> = new Array<WeatherInfo>();\n    const fcList: Array<any> = forecast.list;\n    for (let i = 0; i < 8; ++i) {\n      const newWeather = new WeatherInfo();\n      let element = weather;\n      if (i !== 0) {\n        element = fcList[i - 1];\n      }\n      newWeather.main = element.weather[0].main;\n      newWeather.name = element.name;\n      newWeather.description = element.weather[0].description;\n      newWeather.temp = element.main.temp;\n      newWeather.temp_max = element.main.temp_max;\n      newWeather.temp_min = element.main.temp_min;\n      newWeather.humidity = element.main.humidity;\n      newWeather.wind_speed = element.wind.speed;\n      newWeather.dt = element.dt;\n      newWeather.icon = element.weather[0].icon;\n      listOfForecast.push(newWeather);\n    }\n\n    return <WeatherForm weathers={listOfForecast} />\n  };\n\n  const renderFooter = () => {\n\n    return (\n      <div className=\"flex flex-row w-full fixed text-center inset-x-0 bottom-0 bg-blue-600 h-32 justify-around\">\n        <img alt=\"React_image\" src={React_logo} height={180} width={180}/>\n        <img className=\"my-2\" alt=\"Nodejs_image\" src={Nodejs_logo} height={180} width={320}/>\n        <img alt=\"TypeScript_image\" src={TypeScript_logo} height={180} width={320}/>\n        <img alt=\"Digipen_image\" src={DigiPen_logo} height={180} width={320}/>\n      </div>\n    );\n  };\n\n\n  return (\n    <div className=\"bg-blue-500 h-screen w-screen\">\n      <div className=\"flex flex-col items-center py-4\">\n        <SearchForm getWeather={getWeather} />\n        {showWeather()}\n      </div>\n      {renderFooter()}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/tailwind.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}